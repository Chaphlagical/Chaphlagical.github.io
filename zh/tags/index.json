[{"content":"本节主要介绍计算机图形学中常用的3D数学方法，主要内容包括：\n 向量与矩阵 仿射变换 投影变换 四元数与旋转  相关内容已在数学库CML中实现：https://github.com/Chaf-Libraries/CML\n1. 向量与矩阵 图形学中大部分情况使用2-4维的向量与矩阵，相关内容在线性代数中已有详细介绍，这里不多阐述，可参照LearnOpenGL网站查看相关内容。\n2. 仿射变换 仿射变换包括刚体变换（平移、旋转）、缩放和错切，能够保持共线性。为解决仿射变换中出现的非线性变换问题，例如平移：$\\pmb v'=\\pmb v+\\Delta \\pmb v$，引入齐次坐标的概念，用$n+1$维的向量来表示投影系统空间中的$n$维坐标，用线性变换来表示各种仿射变换，基本格式为：$\\pmb v'=\\pmb {Mv}$，不同变换的合成通过矩阵乘法来实现：$\\pmb v'=\\pmb M_1\\pmb M_2\\cdots\\pmb M_n \\pmb v$\n2.1. 平移变换 $$\n\\pmb T(x,y,z)=\\begin{pmatrix}\n1\u0026amp;0\u0026amp;0\u0026amp;t_x\\\\\n0\u0026amp;1\u0026amp;0\u0026amp;t_y\\\\\n0\u0026amp;0\u0026amp;1\u0026amp;t_z\\\\\n0\u0026amp;0\u0026amp;0\u0026amp;1\\\\\n\\end{pmatrix}\n$$\n2.2. 缩放变换 $$\n\\pmb S(x,y,z)=\\begin{pmatrix}\ns_x\u0026amp;0\u0026amp;0\u0026amp;0\\\\\n0\u0026amp;s_y\u0026amp;0\u0026amp;0\\\\\n0\u0026amp;0\u0026amp;s_z\u0026amp;0\\\\\n0\u0026amp;0\u0026amp;0\u0026amp;1\n\\end{pmatrix}\n$$\n2.3. 绕坐标轴的旋转 $$\n\\pmb R_x(\\theta)=\\begin{pmatrix}\n1\u0026amp;0\u0026amp;0\u0026amp;0\\\\\n0\u0026amp;\\cos\\theta\u0026amp;-\\sin\\theta\u0026amp;0\\\\\n0\u0026amp;\\sin\\theta\u0026amp;\\cos\\theta\u0026amp;0\\\\\n0\u0026amp;0\u0026amp;0\u0026amp;1\n\\end{pmatrix}\n$$\n$$\n\\pmb R_y(\\theta)=\\begin{pmatrix}\n\\cos\\theta\u0026amp;0\u0026amp;\\sin\\theta\u0026amp;0\\\\\n0\u0026amp;1\u0026amp;0\u0026amp;0\\\\\n-\\sin\\theta\u0026amp;0\u0026amp;\\cos\\theta\u0026amp;0\\\\\n0\u0026amp;0\u0026amp;0\u0026amp;1\n\\end{pmatrix}\n$$\n$$\n\\pmb R_z(\\theta)=\\begin{pmatrix}\n\\cos\\theta\u0026amp;-\\sin\\theta\u0026amp;0\u0026amp;0\\\\\n\\sin\\theta\u0026amp;\\cos\\theta\u0026amp;0\u0026amp;0\\\\\n0\u0026amp;0\u0026amp;1\u0026amp;0\\\\\n0\u0026amp;0\u0026amp;0\u0026amp;1\n\\end{pmatrix}\n$$\n2.4. 绕任意轴的旋转 2.4.1. Euler旋转 绕原点任一轴旋转$\\theta$角可以分解为绕$x$，$y$和$z$轴旋转的合成：\n$$\n\\pmb R(\\theta)=\\pmb R_z(\\theta)\\pmb R_y(\\theta)\\pmb R_z(\\theta)\n$$\n注意旋转顺序不可交换\n2.4.2. 一般情况 对于绕任意轴$\\pmb n=(n_x, n_y,n_z)$（其中$\\pmb n$为单位向量）旋转$\\theta$角的旋转矩阵$\\pmb R(\\pmb n, \\theta)$，设有向量$\\pmb v$参与变换，有$\\pmb v'=\\pmb R(\\pmb n, \\theta)\\pmb v$，将$\\pmb v$进行分解为垂直和平行于$\\pmb n$的分量：$\\pmb v=\\pmb v_\\perp+\\pmb v_\\parallel$，又设向量$\\pmb w=\\pmb n\\times\\pmb v_\\perp$垂直于$\\pmb n$和$\\pmb v$构成的平面，则有：\n$$\n\\begin{align}\n\\pmb v_\\parallel\u0026amp;=(\\pmb v\\cdot\\pmb n)\\pmb n\\\\\n\\pmb v_\\perp\u0026amp;=\\pmb v-(\\pmb v\\cdot\\pmb n)\\pmb n\\\\\n\\pmb w\u0026amp;=\\pmb n\\times\\pmb v_\\perp=\\pmb n\\times(\\pmb v-(\\pmb v\\cdot\\pmb n)\\pmb n)=\\pmb n\\times\\pmb v\n\\end{align}\n$$\n参与旋转部分仅有$\\pmb v_\\perp$，有：\n$$\n\\begin{align}\n\\pmb v'_\\perp\u0026amp;=\\pmb v_\\perp\\cos\\theta+\\pmb w\\sin\\theta\\\\\n\u0026amp;=(\\pmb v-(\\pmb v\\cdot\\pmb n)\\pmb n)\\cos\\theta+\\pmb n\\times\\pmb v\\sin\\theta\n\\end{align}\n$$\n结合平行分量：\n$$\n\\begin{align}\n\\pmb v'\u0026amp;=\\pmb v_\\perp'+\\pmb v_\\parallel\\\\\n\u0026amp;=\\pmb v\\cos\\theta+(1-\\cos\\theta)(\\pmb v\\cdot\\pmb n)\\pmb n+\\pmb n\\times\\pmb v\\sin\\theta\n\\end{align}\n$$\n整理得到$\\pmb R(\\pmb n, \\theta)$：\n$$\n\\pmb R(\\pmb n,\\theta)=\\begin{pmatrix}\nn_x^2(1-\\cos\\theta)+\\cos\\theta\u0026amp;n_xn_y(1-\\cos\\theta)-n_z\\sin\\theta\u0026amp;n_xn_z(1-\\cos\\theta)+n_y\\sin\\theta\\\\\nn_xn_y(1-\\cos\\theta)+n_z\\sin\\theta\u0026amp;n_y^2(1-\\cos\\theta)+\\cos\\theta\u0026amp;n_yn_z(1-\\cos\\theta)-n_x\\sin\\theta\\\\\nn_xn_z(1-\\cos\\theta)-n_y\\sin\\theta\u0026amp;n_yn_z(1-\\cos\\theta)-n_y\\sin\\theta\u0026amp;n_z^2(1-\\cos\\theta)+\\cos\\theta\n\\end{pmatrix}\n$$\n3. 投影变换 软光栅渲染中很重要的一步便是将三维空间中的物体投影到二维屏幕上，这一步便是由投影变换完成，投影变换矩阵将视图空间中的顶点数据变换到裁剪空间中，裁剪空间中的顶点最后通过透视除法变换到标准化设备坐标。最常用的投影方式有：透视投影和正交投影\n3.1. 透视投影 经过透视投影，视锥体中的坐标点将被映射到NDC标准化设备坐标\n下面推导透视投影矩阵的计算，假设视锥体中坐标点$(x_e,y_e,z_e)$投影到近平面上的点$(x_p.y_p.z_p)$，设视点到近平面距离为$n$到远平面距离为$f$\n从两个角度观察各个量的关系，由三角形近似比例：\n$$\n\\begin{align}\n\\dfrac{x_p}{x_e}\u0026amp;=\\dfrac{-n}{z_e}\\Rightarrow x_p=\\dfrac{-n\\cdot x_e}{z_e}=\\dfrac{n\\cdot x_e}{-z_e}\\\\\n\\dfrac{y_p}{y_e}\u0026amp;=\\dfrac{-n}{z_e}\\Rightarrow y_p=\\dfrac{-n\\cdot y_e}{z_e}=\\dfrac{n\\cdot y_e}{-z_e}\n\\end{align}\n$$\n注意到$x_p$和$y_p$的计算均需要除以一个$-z_e$，这与裁剪空间到NDC正则化的透视除法相对应：\n$$\n\\begin{align}\n\\begin{pmatrix}\nx_{clip}\\\\y_{clip}\\\\z_{clip}\\\\w_{clip}\n\\end{pmatrix}\n\u0026amp;=\\pmb M_{projection}\\cdot\n\\begin{pmatrix}\nx_{eye}\\\\y_{eye}\\\\z_{eye}\\\\w_{eye}\n\\end{pmatrix}\\\\\n\\begin{pmatrix}\nx_{ndc}\\\\y_{ndc}\\\\z_{ndc}\n\\end{pmatrix}\n\u0026amp;=\n\\begin{pmatrix}\nx_{clip}/w_{clip}\\\\\ny_{clip}/w_{clip}\\\\\nz_{clip}/w_{clip}\n\\end{pmatrix}\n\\end{align}\n$$\n这里的$w_{clip}$便是$-z_e$了，因此透视投影矩阵有如下形式：\n$$\n\\begin{align}\n\\begin{pmatrix}\nx_c\\\\\ny_c\\\\\nz_c\\\\\nw_c\n\\end{pmatrix}=\n\\begin{pmatrix}\n\\cdot \u0026amp; \\cdot \u0026amp; \\cdot \u0026amp; \\cdot\\\\\n\\cdot \u0026amp; \\cdot \u0026amp; \\cdot \u0026amp; \\cdot\\\\\n\\cdot \u0026amp; \\cdot \u0026amp; \\cdot \u0026amp; \\cdot\\\\\n0\u0026amp;0\u0026amp;-1\u0026amp;0\n\\end{pmatrix}\n\\begin{pmatrix}\nx_e\\\\\ny_e\\\\\nz_e\\\\\nw_e\n\\end{pmatrix}\n\\end{align}\n$$\n下面我们需要把近平面坐标点$x_p$和$y_p$线性映射到NDC坐标$x_n$和$y_n$：$[l,r]\\Rightarrow [-1,1]$以及$[b,t]\\Rightarrow [-1,1]$\n$$\n\\begin{align}\n\\dfrac{x_n-(-1)}{1-(-1)}\u0026amp;=\\dfrac{x_p-l}{r-l}\\Rightarrow x_n=\\dfrac{2x_p}{r-l}-\\dfrac{r+l}{r-l}\\\\\n\\dfrac{y_n-(-1)}{1-(-1)}\u0026amp;=\\dfrac{y_p-b}{t-b}\\Rightarrow y_n=\\dfrac{2y_p}{t-b}-\\dfrac{t+b}{t-b}\n\\end{align}\n$$\n将$x_p$和$y_p$代入得\n$$\n\\begin{align}\nx_n=\\Big(\\dfrac{2n}{r-l}\\cdot x_e+\\dfrac{r+l}{r-l}\\cdot z_e \\Big)\\Big/-z_e\\\\\ny_n=\\Big(\\dfrac{2n}{t-b}\\cdot y_e+\\dfrac{t+b}{t-b}\\cdot z_e \\Big)\\Big/-z_e\n\\end{align}\n$$\n可填入透视投影矩阵：\n$$\n\\begin{align}\n\\begin{pmatrix}\nx_c\\\\\ny_c\\\\\nz_c\\\\\nw_c\n\\end{pmatrix}=\n\\begin{pmatrix}\n\\frac{2n}{r-l}\u0026amp;0\u0026amp;\\frac{r+l}{r-l}\u0026amp;0\\\\\n0\u0026amp;\\frac{2n}{t-b}\u0026amp;\\frac{t+b}{t-b}\u0026amp;0\\\\\n\\cdot \u0026amp; \\cdot \u0026amp; \\cdot \u0026amp; \\cdot\\\\\n0\u0026amp;0\u0026amp;-1\u0026amp;0\n\\end{pmatrix}\n\\begin{pmatrix}\nx_e\\\\\ny_e\\\\\nz_e\\\\\nw_e\n\\end{pmatrix}\n\\end{align}\n$$\n由于$z_c$不依赖于$x_e$与$y_e$且与$z_e$和$w_e$成线性关系，设\n$$\n\\begin{align}\n\\begin{pmatrix}\nx_c\\\\\ny_c\\\\\nz_c\\\\\nw_c\n\\end{pmatrix}=\n\\begin{pmatrix}\n\\frac{2n}{r-l}\u0026amp;0\u0026amp;\\frac{r+l}{r-l}\u0026amp;0\\\\\n0\u0026amp;\\frac{2n}{t-b}\u0026amp;\\frac{t+b}{t-b}\u0026amp;0\\\\\n0\u0026amp;0\u0026amp;A\u0026amp;B\\\\\n0\u0026amp;0\u0026amp;-1\u0026amp;0\n\\end{pmatrix}\n\\begin{pmatrix}\nx_e\\\\\ny_e\\\\\nz_e\\\\\nw_e\n\\end{pmatrix}\n\\end{align}\n$$\n即\n$$\nz_n=z_c/w_c=\\dfrac{Az_e+Bw_e}{-z_e}\n$$\n在视角空间中，$w_e=1$，因此$z_n=\\frac{Az_e+B}{-z_e}$，利用边界关系：\n$$\n\\begin{cases}\n\\dfrac{-An+B}{n}=-1\\\\\n\\dfrac{-Af+B}{f}=1\n\\end{cases}\n\\Rightarrow\n\\begin{cases}\nA=-\\dfrac{f+n}{f-n}\\\\\nB=-\\dfrac{2fn}{f-n}\n\\end{cases}\n$$\n因此完整的透视投影矩阵表示为：\n$$\n\\begin{pmatrix}\n\\frac{2n}{r-l}\u0026amp;0\u0026amp;\\frac{r+l}{r-l}\u0026amp;0\\\\\n0\u0026amp;\\frac{2n}{t-b}\u0026amp;\\frac{t+b}{t-b}\u0026amp;0\\\\\n0\u0026amp;0\u0026amp;\\frac{-(f+n)}{f-n}\u0026amp;\\frac{-2fn}{f-n}\\\\\n0\u0026amp;0\u0026amp;-1\u0026amp;0\n\\end{pmatrix}\n$$\n如果视锥体对称，即$t=-b$和$l=-r$，则可简化为：\n$$\n\\begin{pmatrix}\n\\frac{n}{r}\u0026amp;0\u0026amp;0\u0026amp;0\\\\\n0\u0026amp;\\frac{n}{t}\u0026amp;0\u0026amp;0\\\\\n0\u0026amp;0\u0026amp;\\frac{-(f+n)}{f-n}\u0026amp;\\frac{-2fn}{f-n}\\\\\n0\u0026amp;0\u0026amp;-1\u0026amp;0\n\\end{pmatrix}\n$$\n通常情况下我们会用参数$fovy$（$y$轴方向的视域角）、$aspect$（屏幕宽高比）、$near$（近平面）以及$far$（远平面）来构造透视投影矩阵，相关关系如下：\n$$\nr-l=width=2*near*aspect*tan(fovy/2)\n$$\n$$\nt-b=height=2neartan(fovy/2)\n$$\n3.2. 正交投影 正交投影定义了一个立方体的裁剪空间，由宽、高、近平面和远平面所指定，平截头箱以外的坐标点将被裁剪掉，最后同样映射到NDC坐标空间中\n正交投影矩阵的推导较为简单，只需对各个方向作正则化即可：\n$$\n\\begin{cases}\n\\dfrac{x_n-(-1)}{1-(-1)}=\\dfrac{x_e-l}{r-l}\\\\\n\\dfrac{y_n-(-1)}{1-(-1)}=\\dfrac{y_e-b}{t-b}\\\\\n\\dfrac{z_n-(-1)}{1-(-1)}=\\dfrac{z_e-n}{f-n}\n\\end{cases}\n$$\n得到正交投影矩阵：\n$$\n\\begin{pmatrix}\n\\frac{2}{r-l}\u0026amp;0\u0026amp;0\u0026amp;-\\frac{r+l}{r-l}\\\\\n0\u0026amp;\\frac{2}{t-b}\u0026amp;0\u0026amp;-\\frac{t+b}{t-b}\\\\\n0\u0026amp;0\u0026amp;\\frac{-2}{f-n}\u0026amp;-\\frac{f+n}{f-n}\\\\\n0\u0026amp;0\u0026amp;0\u0026amp;1\n\\end{pmatrix}\n$$\n同样地，如果平截头箱对称，则可简化为\n$$\n\\begin{pmatrix}\n\\frac{1}{r}\u0026amp;0\u0026amp;0\u0026amp;0\\\\\n0\u0026amp;\\frac{1}{t}\u0026amp;0\u0026amp;0\\\\\n0\u0026amp;0\u0026amp;\\frac{-2}{f-n}\u0026amp;-\\frac{f+n}{f-n}\\\\\n0\u0026amp;0\u0026amp;0\u0026amp;1\n\\end{pmatrix}\n$$\n至此渲染出一幅软光栅画面所需的数学应该没有太大问题了\n4. 四元数与旋转 前面提到绕固定轴旋转的计算合成方法，但仅依靠欧拉角旋转容易导致万向节死锁的现象，万向节死锁的具体阐述见视频。我们需要一个更加强大的表述旋转的工具，四元数就是其中一种\n4.1. 四元数的定义 四元数是复数的推广，拥有三个虚部，表示为：\n$$\nq=a+bi+cj+dk=(a,\\pmb v),\\ \\ \\ \\ (a,b,c,d\\in\\mathbb R)\n$$\n其中，$i^2=j^2=k^2=ijk=-1$\n4.2. 四元数的性质   模长（范数）\n$$\n\\begin{align}\n\\Arrowvert q\\Arrowvert\u0026amp;=\\sqrt{a^2+b^2+c^2+d^2}\\\\\n\u0026amp;=\\sqrt{s^2+\\Arrowvert\\pmb v\\Arrowvert^2}\\\\\n\u0026amp;=\\sqrt{s^2+\\pmb v\\cdot \\pmb v}\n\\end{align}\n$$\n  加减法运算\n$$\n\\begin{align}\nq_1\\pm q_2\u0026amp;=a_1+b_1i+c_1j+d_1k\\pm(a_2+b_2i+c_2j+d_2k)\\\\\n\u0026amp;=(a_1\\pm a_2)+(b_1\\pm b_2)i+(c_1\\pm c_2)j+(d_1\\pm d_2)k\\\\\n\u0026amp;=(a_1\\pm a_2,\\pmb v_1\\pm \\pmb v_2)\n\\end{align}\n$$\n  标量乘法\n$$\n\\begin{align}\nsq\u0026amp;=s(a+bi+cj+dk)\\\\\n\u0026amp;=sa+sbi+scj+sdk\n\\end{align}\n$$\n  四元数乘法（ Graßmann积）\n$$\n\\begin{align}\nq_1q_2=\u0026amp;(a_1+b_1i+c_1j+d_1k)(a_2+b_2i+c_2j+d_2k)\\\\\n=\u0026amp;(a_1+\\pmb v_1)(a_2+\\pmb v_2)\\\\\n=\u0026amp;a_1a_2+a_1\\pmb v_2+a_2\\pmb v_1+\\pmb v_1\\pmb v_2\n\\end{align}\n$$\n这里$\\pmb v_1=b_1i+c_1j+d_1k$，$\\pmb v_2=b_2i+c_2j+d_2k$，有\n$$\n\\begin{align}\n\\pmb v_1\\pmb v_2=\u0026amp;-b_1b_2+b_1c_2ij+b_1d_2ik\\\\\n\u0026amp;+c_1b_2ji-c_1c_2+c_1d_2jk\\\\\n\u0026amp;+d_1b_2ki+d_1c_2kj-d_1d_2\n\\end{align}\n$$\n又$i^2=j^2=k^2=ijk=-1$，故有：\n$$\n\\begin{align}\nij\u0026amp;=k,ji=-k\\\nik\u0026amp;=j,ki=-j\\\njk\u0026amp;=i,kj=-i\n\\end{align}\n$$\n代入得\n$$\n\\pmb v_1\\pmb v_2=-(b_1b_2+c_1c_2+d_1d_2)+\\left|\\begin{matrix}i\u0026amp;j\u0026amp;k\\\\b_1\u0026amp;c_1\u0026amp;d_1\\\\b_2\u0026amp;c_2\u0026amp;d_2\\end{matrix}\\right|=\\pmb v_1\\times\\pmb v_2-\\pmb v_1\\cdot\\pmb v_2\n$$\n综上，\n$$\n\\begin{align}\nq_1q_2\u0026amp;=(a_1a_2-\\pmb v_1\\cdot\\pmb v_2, a_1\\pmb v_2+a_2\\pmb v_1+\\pmb v_1\\times\\pmb v_2)\\\\\n\u0026amp;=\\begin{pmatrix}\na_1\u0026amp;-b_1\u0026amp;-c_1\u0026amp;-d_1\\\\\nb_1\u0026amp;a_1\u0026amp;-d_1\u0026amp;c_1\\\\\nc_1\u0026amp;d_1\u0026amp;a_1\u0026amp;-b_1\\\\\nd_1\u0026amp;-c_1\u0026amp;b_1\u0026amp;a_1\n\\end{pmatrix}\n\\begin{pmatrix}\na_2\\\\b_2\\\\c_2\\\\d_2\n\\end{pmatrix}\n\\end{align}\n$$\n四元数乘积不符合交换律，这里给出右乘结果：\n$$\n\\begin{align}\nq_2q_1\u0026amp;=\\begin{pmatrix}\na_1\u0026amp;-b_1\u0026amp;-c_1\u0026amp;-d_1\\\\\nb_1\u0026amp;a_1\u0026amp;d_1\u0026amp;-c_1\\\\\nc_1\u0026amp;-d_1\u0026amp;a_1\u0026amp;b_1\\\\\nd_1\u0026amp;c_1\u0026amp;-b_1\u0026amp;a_1\n\\end{pmatrix}\n\\begin{pmatrix}\na_2\\\\b_2\\\\c_2\\\\d_2\n\\end{pmatrix}\n\\end{align}\n$$\n  纯四元数\n$$\nq=(0,\\pmb v)\n$$\n两个纯四元数的乘积：\n$$\n\\begin{align}\nq_1q_2\u0026amp;=(0-\\pmb v_1\\cdot \\pmb v_2,0+\\pmb v_1\\times\\pmb v_2)\\\\\n\u0026amp;=(-\\pmb v_1\\cdot\\pmb v_2, \\pmb v_2\\times\\pmb v_2)\n\\end{align}\n$$\n  四元数的逆\n$$\nqq^{-1}=q^{-1}q=1\n$$\n$q$与$q^{-1}$互逆\n  四元数的共轭\n$$\n\\begin{align}\nq\u0026amp;=a_1+b_1i+c_1j+d_1k\\\\\nq^*\u0026amp;=a_1-b_1i-c_1j-d_1k\n\\end{align}\n$$\n$$\nqq^*=(a^2+\\pmb v\\cdot\\pmb v)=\\Arrowvert q\\Arrowvert^2\n$$\n因此求逆四元数的方法：\n$$\nq^{-1}=\\dfrac{q^*}{\\Arrowvert q\\Arrowvert^2}\n$$\n单位四元数：$\\Arrowvert q\\Arrowvert^2=1$\n  4.3. 四元数与3D旋转 同样地讨论一个向量$\\pmb v$绕旋转轴$\\pmb u$旋转$\\theta$个角度，同样考虑$\\pmb v_\\perp$和$\\pmb v_\\parallel$，定义为纯四元数：\n$$\n\\begin{matrix}\nv=(0,\\pmb v)\u0026amp;v'=(0,\\pmb v')\\\\\nv_\\perp=(0,\\pmb v_\\perp)\u0026amp;v'_\\perp=(0,\\pmb v'_\\perp)\\\\\nv_\\parallel=(0,\\pmb v_\\parallel)\u0026amp;v'_\\parallel=(0,\\pmb v'_\\parallel)\\\\\nu=(0,\\pmb u)\n\\end{matrix}\n$$\n$$\n\\begin{matrix}\nv=v_\\parallel+v_\\perp\u0026amp;\nv'=v'_\\parallel+v'_\\perp\n\\end{matrix}\n$$\n此前已推导过：\n$$\n\\pmb v_\\perp'=\\cos\\theta \\pmb v_\\perp+\\sin\\theta(\\pmb u\\times\\pmb v_\\perp)\n$$\n令四元数$v_\\perp=(0,\\pmb v_\\perp)$，$q=(\\cos\\theta,\\sin\\theta \\pmb u)$，可将上式用四元数表示：\n$$\nv'_\\perp=qv_\\perp\n$$\n同时平行分量不变：$v_\\parallel=v_\\parallel'$\n因此\n$$\nv'=v_\\parallel+qv_\\perp\n$$\n注意到，当$\\pmb u$为单位向量时，\n$$\n\\begin{align}\nq^2\u0026amp;=(\\cos\\theta,\\sin\\theta\\pmb u)\\cdot(\\cos\\theta,\\sin\\theta\\pmb u)\\\\\n\u0026amp;=(\\cos^2\\theta-\\sin^2\\theta, 2\\sin\\theta\\cos\\theta\\pmb u)\\\\\n\u0026amp;=(\\cos2\\theta,\\sin2\\theta\\pmb u)\n\\end{align}\n$$\n因此，旋转后的四元数可表示为：\n$$\n\\begin{align}\nv'\u0026amp;=v_\\parallel+qv_\\perp\\\\\n\u0026amp;=1\\cdot v_\\parallel+qv_\\perp\\\\\n\u0026amp;=pp^{-1}v_\\parallel+ppv_\\perp\n\\end{align}\n$$\n令$q=p^2$，则$p=(\\cos\\frac{\\theta}{2},\\sin\\frac{\\theta}{2}\\pmb u)$，注意到$\\Arrowvert p\\Arrowvert =1$，因此\n$$\np^{-1}=p^*\n$$\n因此，$v'=pp^*v_\\parallel+ppv_\\perp$\n为进一步简化，我们有结论$p^*v_\\parallel=v_\\parallel p^*$和$pv_\\perp=v_\\perp p^*$，证明从略，得到：\n$$\n\\begin{align}\nv'\u0026amp;=pp^*v_\\parallel+ppv_\\perp\\\\\n\u0026amp;=pv_{\\parallel}p^*+pv_{\\perp}p^*\\\\\n\u0026amp;=p(v_\\parallel+v_{\\perp})p^*\\\\\n\u0026amp;=pvp^*\n\\end{align}\n$$\n综上所述，任意向量$\\pmb v$绕以单位向量定义的旋转轴$\\pmb u$旋转$\\theta$角度之后的$\\pmb v'$用四元数表示为：\n$$\nv'=qvq^*=qvq^{-1}\n$$\n其中，$v=(0,\\pmb v)$，$q=(\\cos\\frac{\\theta}{2},\\sin\\frac{\\theta}{2}\\pmb u)$\n对于一个单位四元数$q=(a,\\pmb b)$，其旋转角度与旋转轴可通过如下方式计算：\n$$\n\\theta=2\\cos^{-1}a\n$$\n$$\n\\pmb u=\\dfrac{\\pmb b}{\\sin(\\cos^{-1}a)}\n$$\n4.4. 3D旋转的矩阵形式 前述提到左乘矩阵和右乘矩阵如下：\n$$\nL(q)=\\begin{pmatrix}\na\u0026amp;-b\u0026amp;-c\u0026amp;-d\\\\\nb\u0026amp;a\u0026amp;-d\u0026amp;c\\\\\nc\u0026amp;d\u0026amp;a\u0026amp;-b\\\\\nd\u0026amp;-c\u0026amp;b\u0026amp;a\n\\end{pmatrix}\n$$\n$$\nR(q)=\\begin{pmatrix}\na\u0026amp;-b\u0026amp;-c\u0026amp;-d\\\\\nb\u0026amp;a\u0026amp;d\u0026amp;-c\\\\\nc\u0026amp;-d\u0026amp;a\u0026amp;b\\\\\nd\u0026amp;c\u0026amp;-b\u0026amp;a\n\\end{pmatrix}\n$$\n令$a=\\cos\\frac{\\theta}{2}$，$b=\\sin\\frac{\\theta}{2}u_x$，$c=\\sin\\frac{\\theta}{2}u_y$，$d=\\sin\\frac{\\theta}{2}u_z$，$q=a+bi+cj+dk$，可得\n$$\n\\begin{align}\nqvq^\\ast\u0026amp;=L(q)R(q^\\ast)v\\\\\n\u0026amp;=\\begin{pmatrix}\na\u0026amp;-b\u0026amp;-c\u0026amp;-d\\\\\nb\u0026amp;a\u0026amp;-d\u0026amp;c\\\\\nc\u0026amp;d\u0026amp;a\u0026amp;-b\\\\\nd\u0026amp;-c\u0026amp;b\u0026amp;a\n\\end{pmatrix}\n\\begin{pmatrix}\na\u0026amp;-b\u0026amp;-c\u0026amp;-d\\\\\nb\u0026amp;a\u0026amp;d\u0026amp;-c\\\\\nc\u0026amp;-d\u0026amp;a\u0026amp;b\\\\\nd\u0026amp;c\u0026amp;-b\u0026amp;a\n\\end{pmatrix}v\n\\end{align}\n$$\n又$a^2+b^2+c^2+d^2=1$，有\n$$\nqvq^*=\\begin{pmatrix}\n1\u0026amp;0\u0026amp;0\u0026amp;0\\\\\n0\u0026amp;1-2c^2-2d^2\u0026amp;2bc-2ad\u0026amp;2ac+2bd\\\\\n0\u0026amp;2bc+2ad\u0026amp;1-2b^2-2d^2\u0026amp;2cd-2ab\\\\\n0\u0026amp;2bd-2ac\u0026amp;2ab+2cd\u0026amp;1-2b^2-2c^2\n\\end{pmatrix}v\n$$\n仅考虑虚部可简化为三阶矩阵：\n$$\n\\pmb v'=\\begin{pmatrix}\n1-2c^2-2d^2\u0026amp;2bc-2ad\u0026amp;2ac+2bd\\\\\n2bc+2ad\u0026amp;1-2b^2-2d^2\u0026amp;2cd-2ab\\\\\n2bd-2ac\u0026amp;2ab+2cd\u0026amp;1-2b^2-2c^2\n\\end{pmatrix}\\pmb v\n$$\n同时，四元数旋转也是可以合成的，需要用到引理：$\\prod_{i=1}^nq_i^\\ast=(\\prod_{i=n}^1q_i)^\\ast$\n复合结果：\n$$\n\\begin{align}\nv'\u0026amp;=(q_nq_{n-1}\\cdots q_2q_1)v(q_1^\\ast q_2^\\ast\\cdots q_{n-1}^\\ast q_n^\\ast)\\\\\n\u0026amp;=(q_nq_{n-1}\\cdots q_2q_1)v(q_nq_{n-1}\\cdots q_2q_1)^\\ast\n\\end{align}\n$$\n4.5. 四元数插值 4.5.1. 线性插值Lerp $$\nq_t=Lerp(q_0,q_1,t)=(1-t)q_0+tq_1\n$$\n4.5.2. 正规化线性插值Nlerp $$\nq_t=Nlerp(q_0,q_1,t)=\\dfrac{(1-t)q_0+tq_1}{\\Arrowvert(1-t)q_0+tq_1\\Arrowvert}\n$$\n4.5.3. 球面线性插值Slerp $$\nq_t=Slerp(q_0,q_1,t)=\\dfrac{\\sin((1-t)\\theta)}{\\sin\\theta}q_0+\\dfrac{\\sin(t\\theta)}{\\sin\\theta}q_1\n$$\n到这里，做软光栅所需要的三维数学基本足够了\n参考资料\n[1] https://krasjet.github.io/quaternion/\n[2] http://www.songho.ca/opengl/gl_projectionmatrix.html\n[3] https://learnopengl-cn.github.io/01%20Getting%20started/08%20Coordinate%20Systems/\n","description":"软光栅渲染器之数学库","id":0,"section":"posts","tags":["Software Renderer"],"title":"3D数学基础","uri":"https://chaphlagical.github.io/zh/posts/softwarerenderer/mathematics/"},{"content":"我将在这里分享有趣的知识与技术\n","description":"My Blog","id":2,"section":"","tags":null,"title":"关于","uri":"https://chaphlagical.github.io/zh/about/"}]