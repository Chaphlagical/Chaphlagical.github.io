<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Rendering on Chaf&#39;s Blog</title>
    <link>https://chaphlagical.github.io/zh/categories/rendering/</link>
    <description>Recent content in Rendering on Chaf&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>chaf@mail.ustc.edu.cn (Wenbo Chen)</managingEditor>
    <webMaster>chaf@mail.ustc.edu.cn (Wenbo Chen)</webMaster>
    <copyright>©2022, All Rights Reserved</copyright>
    <lastBuildDate>Mon, 03 Jan 2022 11:25:11 +0100</lastBuildDate>
    
        <atom:link href="https://chaphlagical.github.io/zh/categories/rendering/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>几何造型(4)：极形式和开花算法</title>
        <link>https://chaphlagical.github.io/zh/posts/geometry/polar_form/</link>
        <pubDate>Mon, 03 Jan 2022 11:25:11 +0100</pubDate>
        <author>chaf@mail.ustc.edu.cn (Wenbo Chen)</author>
        <atom:modified>Mon, 03 Jan 2022 11:25:11 +0100</atom:modified>
        <guid>https://chaphlagical.github.io/zh/posts/geometry/polar_form/</guid>
        <description>1. 基本思想 1.1. 仿射组合(Affine Combinations) $n$点的仿射组合为： $$ p_{\pmb\alpha}=\sum_{i=1}^n\alpha_i\pmb{p}_i $$ 其中，$\sum_{i=1}^n\alpha_i=1$ 函数 $f$ 对参数 $x_i$ 是仿射的</description>
        
        <dc:creator>Wenbo Chen</dc:creator>
        <media:content url="https://chaphlagical.github.ioimages/posts/pbr.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Real-time Rendering</category>
            
          
        
        
          
            
              <category>Rendering</category>
            
          
            
              <category>Graphics</category>
            
          
        
        
      </item>
      
      <item>
        <title>基于物理的实时渲染着色方法</title>
        <link>https://chaphlagical.github.io/zh/posts/rendering/pbr/</link>
        <pubDate>Mon, 03 Jan 2022 10:25:11 +0100</pubDate>
        <author>chaf@mail.ustc.edu.cn (Wenbo Chen)</author>
        <atom:modified>Mon, 03 Jan 2022 10:25:11 +0100</atom:modified>
        <guid>https://chaphlagical.github.io/zh/posts/rendering/pbr/</guid>
        <description>事实上，从IlumEngine能够显示东西之初，我就已经搭建了一套基于金属工作流的延迟PBR渲染管线，但之前对于PBR材质模型的理解还不够深</description>
        
        <dc:creator>Wenbo Chen</dc:creator>
        <media:content url="https://chaphlagical.github.ioimages/posts/pbr.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Real-time Rendering</category>
            
          
        
        
          
            
              <category>Rendering</category>
            
          
            
              <category>Graphics</category>
            
          
        
        
      </item>
      
      <item>
        <title>场景编辑器：鼠标拾取</title>
        <link>https://chaphlagical.github.io/zh/posts/rendering/mouse_picking/</link>
        <pubDate>Tue, 14 Dec 2021 17:25:11 +0100</pubDate>
        <author>chaf@mail.ustc.edu.cn (Wenbo Chen)</author>
        <atom:modified>Tue, 14 Dec 2021 17:25:11 +0100</atom:modified>
        <guid>https://chaphlagical.github.io/zh/posts/rendering/mouse_picking/</guid>
        <description>鼠标拾取是引擎场景编辑器的一个非常基础的功能，通过点击屏幕像素选择场景中的物体，能够使用户更加方便地选择物体、编辑场景。利用空闲时间我将Il</description>
        
        <dc:creator>Wenbo Chen</dc:creator>
        <media:content url="https://chaphlagical.github.ioimages/posts/mouse_picking.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>IlumEngine</category>
            
          
        
        
          
            
              <category>Rendering</category>
            
          
            
              <category>Graphics</category>
            
          
        
        
      </item>
      
      <item>
        <title>实时渲染优化技术(1)</title>
        <link>https://chaphlagical.github.io/zh/posts/rendering/optimization1/</link>
        <pubDate>Sat, 11 Dec 2021 10:07:11 +0100</pubDate>
        <author>chaf@mail.ustc.edu.cn (Wenbo Chen)</author>
        <atom:modified>Sat, 11 Dec 2021 10:07:11 +0100</atom:modified>
        <guid>https://chaphlagical.github.io/zh/posts/rendering/optimization1/</guid>
        <description>前段时间初步完成了个人图形引擎IlumEngine的第一次性能优化。此次优化主要集中在几何渲染与纹理系统上，主要内容大致有： Vertex/Index Buffer Packing GPU Driven Rendering GPU Based</description>
        
        <dc:creator>Wenbo Chen</dc:creator>
        <media:content url="https://chaphlagical.github.ioimages/posts/vulkan.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Real-time Rendering</category>
            
          
        
        
          
            
              <category>Rendering</category>
            
          
            
              <category>Graphics</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
