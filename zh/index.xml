<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Chaf&#39;s Blog</title>
    <link>https://chaphlagical.github.io/zh/</link>
    <description>Recent content on Chaf&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>chaf@mail.ustc.edu.cn (Wenbo Chen)</managingEditor>
    <webMaster>chaf@mail.ustc.edu.cn (Wenbo Chen)</webMaster>
    <copyright>©2021, All Rights Reserved</copyright>
    <lastBuildDate>Wed, 29 Dec 2021 10:45:11 +0100</lastBuildDate>
    
        <atom:link href="https://chaphlagical.github.io/zh/index.xml" rel="self" type="application/rss+xml" />
    
      
      
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      

      
      <item>
        <title>几何造型(3)：B样条曲线</title>
        <link>https://chaphlagical.github.io/zh/posts/geometry/b_spline/</link>
        <pubDate>Wed, 29 Dec 2021 10:45:11 +0100</pubDate>
        <author>chaf@mail.ustc.edu.cn (Wenbo Chen)</author>
        <atom:modified>Wed, 29 Dec 2021 10:45:11 +0100</atom:modified>
        <guid>https://chaphlagical.github.io/zh/posts/geometry/b_spline/</guid>
        <description>1. B样条基函数 为解决Bézier曲线的全局性、端点性等问题，我们引入了Bézier样条来实现曲线的局部编辑，但由于Bézier样条曲线本质上</description>
        
        <dc:creator>Wenbo Chen</dc:creator>
        <media:content url="https://chaphlagical.github.ioimages/posts/b_spline.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Geometry</category>
            
          
        
        
          
            
              <category>Geometry</category>
            
          
            
              <category>Graphics</category>
            
          
        
        
      </item>
      
      <item>
        <title>游戏通关：《漫威银河护卫队》</title>
        <link>https://chaphlagical.github.io/zh/posts/gaming/marvel_guardians_of_the_galaxy/</link>
        <pubDate>Fri, 24 Dec 2021 22:45:11 +0100</pubDate>
        <author>chaf@mail.ustc.edu.cn (Wenbo Chen)</author>
        <atom:modified>Fri, 24 Dec 2021 22:45:11 +0100</atom:modified>
        <guid>https://chaphlagical.github.io/zh/posts/gaming/marvel_guardians_of_the_galaxy/</guid>
        <description>因为有了《漫威复仇者联盟》的前车之鉴，许多人是不看好今年这款Crystal Dynamics开发的漫威IP新作，但游戏正式发布后评价却意外的好</description>
        
        <dc:creator>Wenbo Chen</dc:creator>
        <media:content url="https://chaphlagical.github.ioimages/posts/marvel_guardians_of_the_galaxy.jpg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Gaming</category>
            
          
        
        
          
            
              <category>Gaming</category>
            
          
        
        
      </item>
      
      <item>
        <title>几何造型(2)：Bézier样条曲线</title>
        <link>https://chaphlagical.github.io/zh/posts/geometry/bezier_spline/</link>
        <pubDate>Thu, 23 Dec 2021 20:45:11 +0100</pubDate>
        <author>chaf@mail.ustc.edu.cn (Wenbo Chen)</author>
        <atom:modified>Thu, 23 Dec 2021 20:45:11 +0100</atom:modified>
        <guid>https://chaphlagical.github.io/zh/posts/geometry/bezier_spline/</guid>
        <description>1. 简介 之前我们已经介绍过Bézier曲线的原理与实现方法，但由于Bézier曲线的一些问题，例如： 高多项式次数 $n+1$个Bézier控制点</description>
        
        <dc:creator>Wenbo Chen</dc:creator>
        <media:content url="https://chaphlagical.github.ioimages/posts/bezier_spline.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Geometry</category>
            
          
        
        
          
            
              <category>Geometry</category>
            
          
            
              <category>Graphics</category>
            
          
        
        
      </item>
      
      <item>
        <title>几何造型(1)：Bézier曲线</title>
        <link>https://chaphlagical.github.io/zh/posts/geometry/bezier_curve/</link>
        <pubDate>Tue, 14 Dec 2021 17:25:11 +0100</pubDate>
        <author>chaf@mail.ustc.edu.cn (Wenbo Chen)</author>
        <atom:modified>Tue, 14 Dec 2021 17:25:11 +0100</atom:modified>
        <guid>https://chaphlagical.github.io/zh/posts/geometry/bezier_curve/</guid>
        <description>1. 基本原理 Bézier曲线于1962年，由法国工程师Pierre Bézier所提出，用于汽车的主体的几何造型设计。 二阶Bézier曲线如下图</description>
        
        <dc:creator>Wenbo Chen</dc:creator>
        <media:content url="https://chaphlagical.github.ioimages/posts/bezier_curve.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Geometry</category>
            
          
        
        
          
            
              <category>Geometry</category>
            
          
            
              <category>Graphics</category>
            
          
        
        
      </item>
      
      <item>
        <title>场景编辑器：鼠标拾取</title>
        <link>https://chaphlagical.github.io/zh/posts/rendering/mouse_picking/</link>
        <pubDate>Tue, 14 Dec 2021 17:25:11 +0100</pubDate>
        <author>chaf@mail.ustc.edu.cn (Wenbo Chen)</author>
        <atom:modified>Tue, 14 Dec 2021 17:25:11 +0100</atom:modified>
        <guid>https://chaphlagical.github.io/zh/posts/rendering/mouse_picking/</guid>
        <description>鼠标拾取是引擎场景编辑器的一个非常基础的功能，通过点击屏幕像素选择场景中的物体，能够使用户更加方便地选择物体、编辑场景。利用空闲时间我将Il</description>
        
        <dc:creator>Wenbo Chen</dc:creator>
        <media:content url="https://chaphlagical.github.ioimages/posts/mouse_picking.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>IlumEngine</category>
            
          
        
        
          
            
              <category>Rendering</category>
            
          
            
              <category>Graphics</category>
            
          
        
        
      </item>
      
      <item>
        <title>实时渲染优化技术(1)</title>
        <link>https://chaphlagical.github.io/zh/posts/rendering/optimization1/</link>
        <pubDate>Sat, 11 Dec 2021 10:07:11 +0100</pubDate>
        <author>chaf@mail.ustc.edu.cn (Wenbo Chen)</author>
        <atom:modified>Sat, 11 Dec 2021 10:07:11 +0100</atom:modified>
        <guid>https://chaphlagical.github.io/zh/posts/rendering/optimization1/</guid>
        <description>前段时间初步完成了个人图形引擎IlumEngine的第一次性能优化。此次优化主要集中在几何渲染与纹理系统上，主要内容大致有： Vertex/Index Buffer Packing GPU Driven Rendering GPU Based</description>
        
        <dc:creator>Wenbo Chen</dc:creator>
        <media:content url="https://chaphlagical.github.ioimages/posts/vulkan.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Real-time Rendering</category>
            
          
        
        
          
            
              <category>Rendering</category>
            
          
            
              <category>Graphics</category>
            
          
        
        
      </item>
      
      <item>
        <title>Lazy Snapping</title>
        <link>https://chaphlagical.github.io/zh/posts/image_process/lazy_snapping/</link>
        <pubDate>Fri, 03 Dec 2021 15:13:11 +0100</pubDate>
        <author>chaf@mail.ustc.edu.cn (Wenbo Chen)</author>
        <atom:modified>Fri, 03 Dec 2021 15:13:11 +0100</atom:modified>
        <guid>https://chaphlagical.github.io/zh/posts/image_process/lazy_snapping/</guid>
        <description>Lazy Snapping是一种基于图的图像分割方法[1]，能够将图像分割为前景和背景，通过用户交互挑选前景和背景种子，利用最大流最小分割的方法对图</description>
        
        <dc:creator>Wenbo Chen</dc:creator>
        <media:content url="https://chaphlagical.github.ioimages/posts/lazy_snapping.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Digital Image Process</category>
            
          
        
        
          
            
              <category>Digital Image Process</category>
            
          
        
        
      </item>
      
      <item>
        <title>Seam Carving</title>
        <link>https://chaphlagical.github.io/zh/posts/image_process/seam_carving/</link>
        <pubDate>Fri, 03 Dec 2021 15:13:11 +0100</pubDate>
        <author>chaf@mail.ustc.edu.cn (Wenbo Chen)</author>
        <atom:modified>Fri, 03 Dec 2021 15:13:11 +0100</atom:modified>
        <guid>https://chaphlagical.github.io/zh/posts/image_process/seam_carving/</guid>
        <description>Seam Carving算法是一种基于内容的图像缩放方法，在保证图像中“重要区域”不发生形变的前提下，对图像进行缩放。 一种直观的想法便是找出图像中的</description>
        
        <dc:creator>Wenbo Chen</dc:creator>
        <media:content url="https://chaphlagical.github.ioimages/posts/seam_carving.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Digital Image Process</category>
            
          
        
        
          
            
              <category>Digital Image Process</category>
            
          
        
        
      </item>
      
      <item>
        <title>Poisson Image Editing</title>
        <link>https://chaphlagical.github.io/zh/posts/image_process/possion/</link>
        <pubDate>Sat, 23 Oct 2021 16:45:11 +0100</pubDate>
        <author>chaf@mail.ustc.edu.cn (Wenbo Chen)</author>
        <atom:modified>Sat, 23 Oct 2021 16:45:11 +0100</atom:modified>
        <guid>https://chaphlagical.github.io/zh/posts/image_process/possion/</guid>
        <description>1. 问题描述 给定以下两幅图： 现我们需要将第一幅图中的女孩搬到第二幅图的海水中，为使得复制粘贴更加逼真自然，我们需要设计算法来满足我们两幅图像融</description>
        
        <dc:creator>Wenbo Chen</dc:creator>
        <media:content url="https://chaphlagical.github.ioimages/posts/poisson.jpg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Digital Image Process</category>
            
          
        
        
          
            
              <category>Digital Image Process</category>
            
          
        
        
      </item>
      
      <item>
        <title>Image Warping</title>
        <link>https://chaphlagical.github.io/zh/posts/image_process/image_warping/</link>
        <pubDate>Tue, 05 Oct 2021 15:13:11 +0100</pubDate>
        <author>chaf@mail.ustc.edu.cn (Wenbo Chen)</author>
        <atom:modified>Tue, 05 Oct 2021 15:13:11 +0100</atom:modified>
        <guid>https://chaphlagical.github.io/zh/posts/image_process/image_warping/</guid>
        <description>1. 算法原理 1.1. 基本原理 输入：$n$对控制点对$(\pmb p_i,\pmb q_i)$，$i=1,2,\cdots,n$，其中$\pmb p_i\in\mathbb R^2$为控制起始点，</description>
        
        <dc:creator>Wenbo Chen</dc:creator>
        <media:content url="https://chaphlagical.github.ioimages/posts/image_warping.jpg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Digital Image Process</category>
            
          
        
        
          
            
              <category>Digital Image Process</category>
            
          
        
        
      </item>
      
      <item>
        <title>Color Transfer</title>
        <link>https://chaphlagical.github.io/zh/posts/image_process/color_transfer/</link>
        <pubDate>Sun, 19 Sep 2021 15:13:11 +0100</pubDate>
        <author>chaf@mail.ustc.edu.cn (Wenbo Chen)</author>
        <atom:modified>Sun, 19 Sep 2021 15:13:11 +0100</atom:modified>
        <guid>https://chaphlagical.github.io/zh/posts/image_process/color_transfer/</guid>
        <description>1. 问题描述 给定一张原图像： 和一张参考图像： 我们希望通过设计一个颜色转换算法，使得源图像具有目标图像的颜色风格，如下图： 2. 算法描述 衡量一幅图像</description>
        
        <dc:creator>Wenbo Chen</dc:creator>
        <media:content url="https://chaphlagical.github.ioimages/posts/color_transfer.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Digital Image Process</category>
            
          
        
        
          
            
              <category>Digital Image Process</category>
            
          
        
        
      </item>
      
      <item>
        <title>Colorization</title>
        <link>https://chaphlagical.github.io/zh/posts/image_process/colorization/</link>
        <pubDate>Sun, 19 Sep 2021 15:13:11 +0100</pubDate>
        <author>chaf@mail.ustc.edu.cn (Wenbo Chen)</author>
        <atom:modified>Sun, 19 Sep 2021 15:13:11 +0100</atom:modified>
        <guid>https://chaphlagical.github.io/zh/posts/image_process/colorization/</guid>
        <description>1. 问题描述 给定一张原图像： 我们希望通过设计一个灰度图着色算法，使得下述灰度目标图像能够利用彩色原图像的颜色信息进行合理的上色： 以得到类似下图</description>
        
        <dc:creator>Wenbo Chen</dc:creator>
        <media:content url="https://chaphlagical.github.ioimages/posts/colorization.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Digital Image Process</category>
            
          
        
        
          
            
              <category>Digital Image Process</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
